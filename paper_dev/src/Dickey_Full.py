# 增强Dickey-Fuller测试
# 统计测试对您的数据做出了强有力的假设。它们只能用于通知零假设可被拒绝或未被拒绝的程度。必须解释结果才能使给定问题有意义。
#
# 然而，他们可以提供快速检查和确认，证明您的时间序列是静止的或非静止的。
#
# 该扩张的Dickey-Fuller检定是一类被称为统计测试的单位根检验。
#
# 单位根检验背后的直觉是它确定趋势定义时间序列的强度。
#
# 有许多单位根测试，Augmented Dickey-Fuller可能是更广泛使用的之一。它使用自回归模型并优化跨多个不同滞后值的信息标准。
#
# 测试的零假设是时间序列可以用单位根表示，它不是静止的（具有一些时间依赖的结构）。替代假设（拒绝零假设）是时间序列是静止的。
#
# 空假设（H0）：如果未被拒绝，则表明时间序列具有单位根，这意味着它是非平稳的。它有一些时间依赖的结构。
# 替代假设（H1）：零假设被拒绝; 它表明时间序列没有单位根，这意味着它是静止的。它没有时间依赖的结构。
# 我们使用测试中的p值来解释这个结果。低于阈值的p值（例如5％或1％）表明我们拒绝零假设（静止），否则高于阈值的p值表明我们未能拒绝零假设（非静止）。
#
# p值> 0.05：无法拒绝原假设（H0），数据具有单位根并且是非平稳的。
# p值<= 0.05：拒绝原假设（H0），数据没有单位根并且是静止的。

import pandas as pd
from pandas import Series
from statsmodels.tsa.stattools import adfuller

if __name__ == "__main__":
    ce1 = [47.202, 47.273, 47.25, 47.332, 47.213, 47.372, 47.273, 47.438, 46.691, 46.599, 46.623, 46.653, 46.136,
           46.127, 45.948, 45.935, 45.726, 45.139, 44.978, 44.937, 44.269, 44.079, 43.741, 43.375, 42.847, 42.322,
           42.322, 41.797, 41.406, 40.924, 40.427, 39.857, 39.517, 38.999, 38.493, 37.954, 37.552, 37.084, 36.615,
           36.098, 35.58, 35.141, 34.184, 34.177, 33.739, 33.226, 32.913, 32.4, 31.833, 31.862, 31.554, 30.953, 30.639,
           30.561, 30.368, 30.224, 29.79, 29.261, 29.287, 28.866]
    ce153 = [19.575, 19.622, 19.744, 19.906, 19.707, 19.757, 19.782, 19.697, 19.727, 19.744, 19.821, 19.814, 19.829,
             19.724, 19.921, 19.851, 20.092, 20.176, 20.153, 20.084, 20.035, 20.269, 20.245, 20.225, 20.101, 19.973,
             20.203, 19.789, 19.757, 19.759, 19.757, 19.647, 19.645, 19.714, 19.687, 19.697, 19.547, 19.57, 19.52,
             19.682, 19.607, 19.781, 19.694, 19.729, 19.756, 19.612, 19.679, 19.719, 19.575, 19.495, 19.634, 19.592,
             19.766, 19.741, 19.756, 19.729, 19.851, 19.712, 19.856, 19.781]
    ce652 = [19.047, 18.882, 19.101, 18.948, 18.825, 18.937, 18.842, 18.889, 18.925, 18.854, 18.717, 18.806, 18.835,
             18.819, 18.771, 18.835, 18.771, 18.809, 18.889, 18.866, 18.869, 18.79, 19.031, 19.057, 19.113, 19.075,
             19.104, 19.094, 18.892, 18.864, 18.892, 18.875, 18.819, 18.828, 18.835, 18.854, 18.899, 18.812, 18.864,
             18.873, 18.914, 18.714, 18.873, 18.952, 19.064, 19.104, 19.059, 19.118, 19.075, 19.094, 19.094, 19.075,
             19.092, 19.104, 19.054, 19.064, 18.848, 19.007, 19.045, 19.146]
    ce47 = [19.515, 19.567, 19.646, 19.85, 19.852, 19.824, 19.75, 19.683, 19.475, 19.639, 19.693, 19.696, 19.714, 19.76,
            19.727, 19.67, 19.398, 19.643, 19.359, 19.359, 19.612, 19.671, 19.63, 19.63, 19.669, 19.339, 19.157, 19.063,
            19.009, 18.894, 19.001, 18.908, 19.129, 19.137, 19.088, 18.994, 18.779, 18.759, 18.675, 18.795, 18.785,
            18.911, 19.012, 19.209, 19.276, 19.279, 18.994, 19.163, 19.168, 19.219, 19.468, 19.445, 19.727, 19.696,
            19.696, 19.67, 19.437, 19.483, 19.357, 19.527]

    cp1 = [2.184, 2.184, 2.184, 2.185, 2.178, 2.188, 2.177, 2.18, 2.151, 2.143, 2.156, 2.166, 2.128, 2.122, 2.137,
           2.134, 2.142, 2.12, 2.122, 2.122, 2.087, 2.085, 2.062, 2.052, 2.021, 1.995, 2.001, 1.979, 1.956, 1.932,
           1.916, 1.893, 1.863, 1.841, 1.828, 1.809, 1.785, 1.763, 1.74, 1.72, 1.692, 1.668, 1.623, 1.623, 1.608, 1.586,
           1.563, 1.538, 1.52, 1.518, 1.509, 1.47, 1.458, 1.452, 1.443, 1.449, 1.428, 1.401, 1.402, 1.383]
    cp481 = [1.595, 1.612, 1.617, 1.638, 1.618, 1.622, 1.599, 1.605, 1.6, 1.573, 1.577, 1.575, 1.593, 1.592, 1.583,
             1.582, 1.571, 1.575, 1.57, 1.574, 1.567, 1.582, 1.588, 1.599, 1.609, 1.615, 1.615, 1.597, 1.582, 1.586,
             1.585, 1.597, 1.604, 1.611, 1.604, 1.609, 1.599, 1.58, 1.589, 1.588, 1.583, 1.583, 1.604, 1.597, 1.609,
             1.606, 1.609, 1.61, 1.605, 1.606, 1.609, 1.613, 1.632, 1.63, 1.626, 1.607, 1.605, 1.585, 1.596, 1.601]
    cp819 = [1.698, 1.689, 1.718, 1.714, 1.69, 1.692, 1.703, 1.693, 1.691, 1.714, 1.702, 1.704, 1.705, 1.709, 1.714,
             1.722, 1.714, 1.695, 1.712, 1.723, 1.729, 1.73, 1.726, 1.724, 1.711, 1.705, 1.716, 1.717, 1.713, 1.699,
             1.721, 1.711, 1.711, 1.701, 1.706, 1.699, 1.701, 1.687, 1.713, 1.713, 1.718, 1.71, 1.711, 1.707, 1.709,
             1.693, 1.697, 1.688, 1.685, 1.689, 1.716, 1.71, 1.701, 1.704, 1.708, 1.696, 1.689, 1.695, 1.693, 1.714]
    ts4 = [38.633, 38.535, 38.469, 38.379, 38.297, 38.223, 38.125, 38.062, 37.977, 37.969, 37.887, 37.902, 37.965,
           38.047, 38.18, 38.203, 38.367, 38.406, 38.457, 38.629, 38.633, 38.699, 38.801, 38.801, 38.828, 38.902,
           38.895, 38.969, 38.988, 39.055, 39.055, 39.055, 39.055, 39.121, 39.215, 39.215, 39.219, 39.227, 39.273,
           39.285, 39.293, 39.293, 39.273, 39.285, 39.375, 39.359, 39.375, 39.379, 39.367, 39.363, 39.441, 39.363,
           39.367, 39.457, 39.461, 39.461, 39.473, 39.441, 39.453, 39.461]
    ts3 = [37.488, 37.391, 37.34, 37.312, 37.223, 37.145, 37.059, 36.973, 36.898, 36.879, 36.887, 36.887, 36.98, 37.059,
           37.137, 37.23, 37.316, 37.398, 37.477, 37.582, 37.578, 37.723, 37.73, 37.73, 37.797, 37.898, 37.98, 37.977,
           37.984, 38.016, 38.031, 38.047, 38.117, 38.125, 38.195, 38.219, 38.207, 38.289, 38.301, 38.281, 38.367,
           38.379, 38.379, 38.379, 38.379, 38.375, 38.367, 38.391, 38.391, 38.469, 38.457, 38.461, 38.457, 38.469,
           38.469, 38.555, 38.527, 38.543, 38.527, 38.621]
    ts32 = [50.133, 50.039, 50.02, 49.887, 49.793, 49.742, 49.715, 49.625, 49.586, 49.547, 49.547, 49.465, 49.477,
            49.543, 49.598, 49.621, 49.73, 49.746, 49.785, 49.801, 49.879, 49.875, 49.957, 49.973, 50.008, 50.039,
            50.012, 50.012, 50.051, 50.055, 50.141, 50.129, 50.207, 50.195, 50.207, 50.289, 50.293, 50.359, 50.371,
            50.371, 50.379, 50.371, 50.383, 50.293, 50.293, 50.281, 50.293, 50.277, 50.289, 50.289, 50.199, 50.207,
            50.211, 50.199, 50.211, 50.211, 50.223, 50.211, 50.207, 50.207]
    ts745 = [50.238, 50.168, 50.078, 50.062, 49.988, 49.988, 49.918, 49.836, 49.836, 49.809, 49.809, 49.773, 49.785,
             49.809, 49.828, 49.852, 49.922, 50.008, 50, 50.027, 50.039, 50.039, 50.047, 50.09, 50.074, 50.078, 50.09,
             50.094, 50.086, 50.094, 50.086, 50.168, 50.168, 50.16, 50.238, 50.187, 50.207, 50.223, 50.238, 50.238,
             50.223, 50.219, 50.219, 50.211, 50.16, 50.172, 50.168, 50.152, 50.168, 50.16, 50.086, 50.09, 50.086,
             50.086, 50.078, 50.051, 50.039, 50.039, 50.055, 50.039]

    ce70 = [19.626, 19.58, 19.58, 19.529, 19.542, 19.598, 19.55, 19.502, 19.596, 19.454, 19.385, 19.614, 19.611, 19.728,
            19.82, 19.769, 19.777, 19.713, 19.586, 19.914, 19.866, 19.866, 19.798, 19.932, 19.622, 19.635, 19.703,
            19.554, 19.395, 19.324, 19.411, 19.474, 19.361, 19.371, 19.415, 19.363, 19.247, 19.139, 19.165, 19.178,
            19.214, 19.217, 19.272, 19.192, 19.256, 19.419, 19.458, 19.172, 19.221, 19.216, 19.473, 19.491, 19.537,
            19.499, 19.749, 19.669, 19.659, 19.679, 19.69, 19.694]
    ce1330 = [27.624,27.5,27.759,27.739,27.705,27.728,27.42,27.345,27.31,27.309,27.662,27.696,27.559,27.664,27.706,27.447,27.538,27.55,27.83,27.796,27.924,27.886,27.886,27.794,27.646,27.554,27.543,27.487,27.431,27.339,27.33,27.307,27.284,27.202,27.258,27.281,26.654,26.666,26.666,27.031,26.984,27.082,27.05,27.089,27.055,27.02,27.008,27.082,27.089,27.05,27.055,27.047,27.05,27.047,27.047,27.055,27.053,27.082,27.039,27.177]
    ce898 = [26.486,26.521,26.521,26.502,26.628,26.613,26.624,26.533,26.486,26.482,26.377,26.411,26.427,26.388,26.565,26.756,26.678,26.714,26.848,26.872,26.903,26.828,26.924,26.949,26.872,26.892,27.01,26.938,26.937,26.903,26.71,26.698,26.492,26.414,26.491,26.458,26.513,26.349,26.427,26.485,26.365,26.392,26.458,26.383,26.539,26.38,26.388,26.185,26.184,26.255,26.208,26.243,26.411,26.427,26.388,26.423,26.345,26.438,26.392,26.547]
    ce555 = [19.321,19.436,19.418,19.312,19.258,19.194,19.243,19.215,19.061,19.068,19.111,18.927,19.02,19.061,18.991,19.03,18.977,19.073,18.908,18.981,19.119,19.119,19.159,19.135,19.105,19,19.023,19.059,19.078,19.101,19.054,19.174,18.939,19.322,19.048,19.045,19.03,18.93,18.939,18.937,18.959,18.937,19.049,19.106,19.07,19.101,19.059,19.242,19.116,19.082,19.118,19.248,19.328,19.278,19.179,19.214,19.054,19.059,19.191,19.207]
    cp456 = [1.577,1.575,1.577,1.597,1.596,1.597,1.601,1.6,1.596,1.589,1.592,1.607,1.612,1.607,1.609,1.605,1.607,1.613,1.591,1.587,1.596,1.609,1.613,1.61,1.601,1.596,1.614,1.595,1.595,1.588,1.572,1.575,1.579,1.577,1.575,1.554,1.544,1.541,1.547,1.549,1.559,1.558,1.565,1.568,1.569,1.572,1.593,1.598,1.597,1.593,1.581,1.581,1.589,1.585,1.589,1.611,1.607,1.605,1.603,1.612]
    cp999 = [1.726,1.724,1.731,1.722,1.714,1.698,1.704,1.711,1.702,1.717,1.702,1.705,1.713,1.713,1.727,1.708,1.712,1.735,1.734,1.751,1.757,1.759,1.765,1.753,1.763,1.759,1.769,1.763,1.734,1.755,1.765,1.756,1.732,1.734,1.717,1.715,1.694,1.695,1.69,1.691,1.694,1.714,1.715,1.71,1.689,1.694,1.693,1.695,1.692,1.692,1.721,1.715,1.712,1.709,1.715,1.716,1.69,1.694,1.713,1.716]
    cp1256 = [1.712,1.712,1.703,1.722,1.725,1.732,1.729,1.729,1.726,1.724,1.719,1.714,1.733,1.734,1.719,1.742,1.739,1.735,1.77,1.767,1.782,1.781,1.787,1.779,1.786,1.782,1.766,1.764,1.786,1.782,1.778,1.763,1.751,1.76,1.76,1.758,1.739,1.724,1.732,1.737,1.74,1.734,1.732,1.74,1.74,1.739,1.722,1.709,1.71,1.702,1.722,1.724,1.729,1.725,1.739,1.724,1.723,1.702,1.737,1.742]
    cp2000 = [2.142,2.133,2.163,2.162,2.16,2.162,2.155,2.159,2.164,2.152,2.147,2.15,2.145,2.148,2.15,2.142,2.18,2.179,2.175,2.195,2.196,2.189,2.176,2.177,2.166,2.17,2.172,2.156,2.162,2.142,2.155,2.156,2.161,2.156,2.151,2.149,2.155,2.154,2.155,2.157,2.149,2.152,2.152,2.152,2.15,2.146,2.15,2.147,2.132,2.131,2.13,2.105,2.126,2.124,2.129,2.132,2.127,2.126,2.129,2.138]
    ts89 = [52.969,52.969,52.914,52.789,52.742,52.648,52.566,52.543,52.484,52.391,52.41,52.328,52.406,52.477,52.562,52.582,52.668,52.734,52.789,52.801,52.832,52.914,52.969,52.977,52.953,52.977,52.961,52.965,52.992,52.996,52.98,52.988,53.07,53.16,53.16,53.191,53.215,53.227,53.219,53.23,53.23,53.227,53.207,53.215,53.215,53.152,53.168,53.16,53.16,53.164,53.16,53.16,53.164,53.152,53.074,53.082,53.086,53.086,53.074,52.992]
    ts366 = [55.918,55.824,55.746,55.723,55.582,55.496,55.418,55.32,55.277,55.16,55.156,55.164,55.25,55.285,55.332,55.508,55.508,55.602,55.676,55.73,55.695,55.758,55.84,55.91,55.906,55.977,55.949,55.996,55.996,56,56,56.004,56.004,55.969,56,55.961,55.984,55.922,55.906,55.922,55.934,55.934,55.941,55.836,55.844,55.922,55.84,55.84,55.93,55.879,55.836,55.75,55.758,55.844,55.836,55.844,55.844,55.922,55.977,55.922]
    ts1562 = [35.504,35.508,35.422,35.328,35.344,35.254,35.199,35.184,35.176,35.195,35.168,35.16,35.16,35.25,35.254,35.336,35.344,35.434,35.414,35.437,35.441,35.434,35.426,35.441,35.531,35.422,35.426,35.52,35.492,35.527,35.508,35.594,35.598,35.598,35.598,35.664,35.703,35.695,35.691,35.676,35.691,35.695,35.664,35.687,35.691,35.668,35.695,35.68,35.687,35.676,35.652,35.68,35.594,35.586,35.582,35.594,35.598,35.566,35.5,35.586]
    ts1999 = [36.332,36.332,36.246,36.246,36.09,36.02,36.027,36.078,36.02,36.02,36.008,36.012,36.023,36.012,36.102,36.102,36.184,36.184,36.172,36.246,36.25,36.254,36.238,36.246,36.246,36.234,36.32,36.25,36.254,36.34,36.328,36.328,36.332,36.332,36.359,36.426,36.422,36.426,36.414,36.434,36.492,36.406,36.414,36.406,36.414,36.422,36.422,36.414,36.5,36.426,36.434,36.41,36.414,36.422,36.422,36.426,36.426,36.344,36.34,36.328]

    X = pd.Series(ts1999)
    result = adfuller(X)
    print('ADF Statistic: %f' % result[0])
    print('p-value: %f' % result[1])
    print('Critical Values:')
    for key, value in result[4].items():
        print('\t%s: %.3f' % (key, value))

